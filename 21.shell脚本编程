shell 是一个命令行解释器 为用户提供了一个像linux内核发送请求的入口
用户可以用shell来启动、挂起、停止程序

脚本格式要求
1.脚本以#！/bin/bash开头
2.脚本需要有可执行权限


脚本的执行权限
方式1：输入脚本的绝对路径或者相对路径(首先要赋予helloworld.sh脚本的+x权限)
方式2：sh ./hello.world.sh(不用赋予权限，直接执行)


shell变量  分为系统变量和用户自定义变量
系统变量 $HOME  $PWD  $SHELL
显示系统所有的变量: set

定义：变量名=值
撤销：unset 变量
声明静态变量 readonly 变量 不能unset

shell变量定义规则
1.变量名称可以由字母、数字和下划线组成，不能以数字开头
2.等号两侧不能有空格
3.变量名称一般习惯大写

将命令的返回值赋值给变量
A=`date` 运行里面的命令，并将结果返回给变量A
A=$(date) 等价于反引号


设置环境变量
export aa=bb 临时的，只在当前shell及其子进程中生效
source /etc/profile 让修改后的配置信息立即生效
echo $变量名

位置参数变量：获取命令行传入的参数信息
基本语法：
$n: $0 命令本身  $1 第一个参数以此类推
$*: 获取命令行中的所有参数
$@: 获取命令行中的每个参数
$#: 获取命令行中参数的个数

预定义变量
$$ 当前进程的进程号PID
$! 后台最后一个进程的进程号
$? 最后一次执行的命令的返回状态 0代表代表上一个命令正确执行

shell运算操作
$((运算式)) 或 $[运算式]
expr \*, /, % 乘 除 取余


read读取控制台输入
read(选项)(参数)
选项：
-p: 指定读取值时的提示符
-t: 指定读取值时等待的时间(秒)， 如果没有在指定的时间输入，就不在等待了
参数：
变量：指定读取值的变量名
read -t 10 -p "请输入一个数" NUM1
echo $NUM1


函数
shell函数和其他编程语言一样，由系统函数，也可以自定义函数

系统函数：
basename [pathname][suffix]
: 返回完整路径最后/部分，常用于获取文件名
如果指定suffix,会将suffix去掉

dirname 文件的绝对路径
: 返回完整路径最后/的前面的部分，常用于返回路径部分

